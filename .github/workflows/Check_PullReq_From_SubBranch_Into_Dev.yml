name: Check deploy package

# Controls when the action will run. 
on:
  # Triggers the workflow on pull request event but only for the master branch
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Get the salesforce command line tool, extract it untar it and then install it
      - name: 'Install CLI and Login to Org'
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install
          
      - uses: sfdx-actions/setup-sfdx@v1
        with:
          sfdx-auth-url: ${{ secrets.AUTH_SECRET }}
          
      - name: Branches Involved
        env:
          SOURCE_BRANCH: ${{ toJSON(github.head_ref) }}
          TARGET_BRANCH: ${{ toJSON(github.base_ref) }}
          USER: ${{ toJSON(github.actor) }}
        run: |
          echo "$SOURCE_BRANCH"
          echo "$TARGET_BRANCH"
           echo "$USER"
      
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HH
          utcOffset: "+08:00"
      - name: Use current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          R_TIME: "${{ steps.current-time.outputs.readableTime }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
          YEAR: "${{ steps.current-time.outputs.year }}"
          DAY: "${{ steps.current-time.outputs.day }}"
        run: echo $TIME $R_TIME $F_TIME $YEAR $DAY
            
      # sudo npm install sfdx-git-delta@latest -g  
      - name: Install App and Create Delta
        run: |
          sudo npm install sfdx-git-delta@latest -g
          git fetch --all
          git --no-pager diff --name-status $SOURCE_BRANCH origin/dev
          mkdir changed-sources
          sgd --to $SOURCE_BRANCH --from origin/dev --repo . --output changed-sources/ --generate-delta
          cat changed-sources/package/package.xml
          
      - uses: actions/upload-artifact@v2
        with:
          name: package check uploaded from ${{ github.head_ref }} to ${{ github.base_ref }} by ${{ github.actor }} ${{ steps.current-time.outputs.day }} - ${{ steps.current-time.outputs.month }} - ${{ steps.current-time.outputs.year }} ${{ steps.current-time.outputs.readableTime }}
          path: changed-sources/    
          
      - name: Convert Metadata
        run: sfdx force:source:convert --manifest=changed-sources/package/package.xml --outputdir=convert

      - name: Run Tests and Deploy
        run: sfdx force:mdapi:deploy --deploydir=convert --checkonly -w30
